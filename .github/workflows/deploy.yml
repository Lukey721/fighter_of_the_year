name: Build and Push to Docker Hub

on:
  push:
    branches: [ "master" ]

jobs:
  docker-build-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build user-api
      uses: docker/build-push-action@v5
      with:
        context: ./${{ secrets.USER_CONTEXT }}
        push: false # wont push yet, security checks first
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_USER_IMAGE_NAME }}:latest
    
    - name: Install Trivy
      run: |
        curl -sfL https://github.com/aquasecurity/trivy/releases/download/v0.22.0/trivy_0.22.0_Linux-64bit.tar.gz | tar -xzv
        sudo mv trivy /usr/local/bin/

    # Scan the user-api Docker image for vulnerabilities
    - name: Scan Docker image with Trivy
      run: trivy image --exit-code 0 --no-progress --format json ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_USER_IMAGE_NAME }}:latest > user-api-trivy-report.json

    # Upload the Trivy scan report as an artifact
    - name: Upload Trivy scan report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: user-api-trivy-report
        path: user-api-trivy-report.json

    - name: Build and push voting-api
      uses: docker/build-push-action@v5
      with:
        context: ./${{ secrets.VOTING_CONTEXT }}
        push: true 
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_VOTING_IMAGE_NAME }}:latest

    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./${{ secrets.FRONTEND_CONTEXT }}
        push: true 
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_FRONTEND_IMAGE_NAME }}:latest

    # Push the checked image to Docker Hub
    - name: Push user-api Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_USER_IMAGE_NAME }}:latest