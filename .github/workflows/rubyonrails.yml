# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "master", "testing" ]
  pull_request:
    branches: [ "master", "testing" ]
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    #Check out code from repository
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.2 # The Ruby version 
        bundler-cache: true # Enable bundler caching for faster builds

    - name: Install dependencies for ufc-frontend
      working-directory: ./ufc-frontend
      run: bundle install
      
    - name: Install dependencies for user-api
      working-directory: ./user-api
      run: bundle install
      
    - name: Install dependencies for voting-api
      working-directory: ./voting-api
      run: bundle install
    
      # Allow access to bin directory for BDD tests
    #- name: Verify Ruby Version and Permissions
     # run: |
     #   chmod +x bin/*
     #   sed -i 's/ruby.exe/ruby/' bin/*

    # Precompile assets to ensure they are available for testing
    #- name: Precompile assets
    #  run: |
    #      bundle exec rails assets:precompile

    # Run BDD tests with Cucumber
    #- name: Run BDD tests
    #  env:
    #    RAILS_ENV: test
    #  run: |
    #    mkdir -p bdd_test_results
    #    bin/rails cucumber > bdd_test_results/cucumber_results.txt

    # Upload BDD report as an artifact
    #- name: Publish BDD Test Results
    #  uses: actions/upload-artifact@v4
    #  with:
    #    name: Cucumber BDD Tests
    #    path: bdd_test_results/cucumber_results.txt

      # Run rubocop for static code analysis
    - name: RuboCop on voting-api
      working-directory: ./voting-api
      run: bundle exec rubocop --fail-level=error

    - name: RuboCop on user-api
      working-directory: ./user-api
      run: bundle exec rubocop --fail-level=error

    - name: RuboCop on ufc-frontend
      working-directory: ./ufc-frontend
      run: bundle exec rubocop --fail-level=error
      
      # Run bundler-audit for dependency vulnerability checks
    - name: Bundler Audit on voting-api
      working-directory: ./voting-api
      run: bundle exec bundler-audit check --update
    
    - name: Bundler Audit on user-api
      working-directory: ./user-api
      run: bundle exec bundler-audit check --update
    
    - name: Bundler Audit on ufc-frontend
      working-directory: ./ufc-frontend
      run: bundle exec bundler-audit check --update
    
      # Run Brakeman for static security analysis
    - name: Brakeman on voting-api
      working-directory: ./voting-api
      run: bundle exec brakeman -z
    
    - name: Brakeman on user-api
      working-directory: ./user-api
      run: bundle exec brakeman -z
    
    - name: Brakeman on ufc-frontend
      working-directory: ./ufc-frontend
      run: bundle exec brakeman -z

    - name: Run RSpec tests
      working-directory: ./ufc-frontend
      run: bundle exec rspec --format html --out tmp/rspec_results.html

    # Upload code coverage report as an HTML format
    - name: Save Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ./ufc-frontend/tmp/rspec_results.html
    
    # Upload code coverage report as a artifact
    - name: Save Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
  